updateR()
install.packages("ggmap")
library(ggmap)
qmap('Montreal')
?register_google
18*50
18*40
120 * 13
120000 * 13
110000 * 13
115000 * 13
12000 * 13
120000 * 13
library(hitandrun)
install.packages("hitandrun")
install.packages("hitandrun")
install.packages("hitandrun")
install.package("hitandrun")
install.packages("hitandrun")
install.packages("hitandrun")
library(hitandrun)
v1 <- c(0.8, 0.05, 0.05, 0.02, 0.08)
v2 <- c(0.2, 0.2, 0.3, 0.1, 0.2)
log(v1)
v1 * log(v1)
sum(v1 * log(v1))
-sum(v1 * log(v1))
-sum(v2 * log(v2))
9*1.7
1*log(1)
.1*log(.1)
.01*log(.01)
.05*log(0.05)
.1*log(0.1)
2000 * 60
5000 * 1.2
5000 * 1.2 / 60
5000 * 1.2 / 60 / 24
48 *( 1.63)
44 *( 1.63)
24 *( 1.63)
12 *( 1.63)
27 *( 1.63)
a <- c(0.02, 0.04, 0.06, 0.2, 0,5, 0.6, 0.3, 0.6)
p.adjust(a, "BH")
b <- c(a, 0.6, 0.6, 0.6, 0.6)
p.adjust(b, "BH")
data <- scan("resilience/code/tmp.counts")
hist(data, col=2)
hist(data, col=2, xlim=c(5000))
hist(data, col=2, xlim=c(0,5000))
hist(data, col=2, xlim=c(0,5000), breaks=1000)
summary(data)
q()
500 / 60
d1 <- read.table("FNM/code/tmp.rewired")
d2 <- read.table("FNM/code/tmp.rewired2")
head(d1)
d1[1:10, 1:10]
d2[1:10, 1:10]
d1 == d2
cor( as.vector(d1), as.vector(d2))
data <- as.matrix(read.table("tmp.inp"))
setwd("FNM/code/")
#setwd("FNM/code/")
library(BiRewire)
data <- as.matrix(read.table("tmp.inp"))
dim(data)
data.rewired <- birewire.rewire.undirected(data, max.iter="n",accuracy=0.00005, verbose=TRUE,MAXITER_MUL=10,exact=FALSE)
is.matrix(data)
is.matrix(data.rewired)
cor(as.numeric(data), as.numeric(data.rewired))
length(as.numeric(data))
q()
